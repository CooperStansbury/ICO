%  population is subclass of material entity
%  entity: OBI_0000181
all x (Population(x) -> MaterialEntity(x)). 

%  collection of organisms is subclass of material entity
%  entity: OBI_0000181
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (CollectionOfOrganisms(x) -> MaterialEntity(x)). 

%  specimen is subclass of material entity
%  entity: OBI_0000181
all x (Specimen(x) -> MaterialEntity(x)). 

%  document act target is subclass of material entity
%  entity: OBI_0000181
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (DocumentActTarget(x) -> MaterialEntity(x)). 

%  disorder is subclass of material entity
%  entity: OBI_0000181
all x (Disorder(x) -> MaterialEntity(x)). 

%  Material anatomical entity is subclass of material entity
%  entity: OBI_0000181
all x (MaterialAnatomicalEntity(x) -> MaterialEntity(x)). 

%  organization is subclass of material entity
%  entity: OBI_0000181
all x (Organization(x) -> MaterialEntity(x)). 

%  material information bearer is subclass of material entity
%  entity: OBI_0000181
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (MaterialInformationBearer(x) -> MaterialEntity(x)). 

%  fiat object is subclass of material entity
%  entity: OBI_0000181
all x (FiatObject(x) -> MaterialEntity(x)). 

%  object is subclass of material entity
%  entity: OBI_0000181
all x (Object(x) -> MaterialEntity(x)). 

%  object aggregate is subclass of material entity
%  entity: OBI_0000181
all x (ObjectAggregate(x) -> MaterialEntity(x)). 

%  agent is subclass of material entity
%  entity: OBI_0000181
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (Agent(x) -> MaterialEntity(x)). 

%  organism is subclass of material entity
%  entity: OBI_0000181
all x (Organism(x) -> MaterialEntity(x)). 

%  aggregate of organizations is subclass of material entity
%  entity: OBI_0000181
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (AggregateOfOrganizations(x) -> MaterialEntity(x)). 

%  programming language is subclass of plan specification
%  entity: OBI_0500000
all x (ProgrammingLanguage(x) -> PlanSpecification(x)). 

%  algorithm is subclass of plan specification
%  entity: OBI_0500000
all x (Algorithm(x) -> PlanSpecification(x)). 

%  software is subclass of plan specification
%  entity: OBI_0500000
all x (Software(x) -> PlanSpecification(x)). 

%  study design is subclass of plan specification
%  entity: OBI_0500000
all x (StudyDesign(x) -> PlanSpecification(x)). 

%  population is subclass of material entity
%  entity: OBI_0100051
all x (Population(x) -> MaterialEntity(x)). 

%  collection of organisms is subclass of material entity
%  entity: OBI_0100051
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (CollectionOfOrganisms(x) -> MaterialEntity(x)). 

%  specimen is subclass of material entity
%  entity: OBI_0100051
all x (Specimen(x) -> MaterialEntity(x)). 

%  document act target is subclass of material entity
%  entity: OBI_0100051
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (DocumentActTarget(x) -> MaterialEntity(x)). 

%  disorder is subclass of material entity
%  entity: OBI_0100051
all x (Disorder(x) -> MaterialEntity(x)). 

%  Material anatomical entity is subclass of material entity
%  entity: OBI_0100051
all x (MaterialAnatomicalEntity(x) -> MaterialEntity(x)). 

%  organization is subclass of material entity
%  entity: OBI_0100051
all x (Organization(x) -> MaterialEntity(x)). 

%  material information bearer is subclass of material entity
%  entity: OBI_0100051
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (MaterialInformationBearer(x) -> MaterialEntity(x)). 

%  fiat object is subclass of material entity
%  entity: OBI_0100051
all x (FiatObject(x) -> MaterialEntity(x)). 

%  object is subclass of material entity
%  entity: OBI_0100051
all x (Object(x) -> MaterialEntity(x)). 

%  object aggregate is subclass of material entity
%  entity: OBI_0100051
all x (ObjectAggregate(x) -> MaterialEntity(x)). 

%  agent is subclass of material entity
%  entity: OBI_0100051
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (Agent(x) -> MaterialEntity(x)). 

%  organism is subclass of material entity
%  entity: OBI_0100051
all x (Organism(x) -> MaterialEntity(x)). 

%  aggregate of organizations is subclass of material entity
%  entity: OBI_0100051
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (AggregateOfOrganizations(x) -> MaterialEntity(x)). 

%  population is subclass of material entity
%  entity: OBI_0100026
all x (Population(x) -> MaterialEntity(x)). 

%  collection of organisms is subclass of material entity
%  entity: OBI_0100026
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (CollectionOfOrganisms(x) -> MaterialEntity(x)). 

%  specimen is subclass of material entity
%  entity: OBI_0100026
all x (Specimen(x) -> MaterialEntity(x)). 

%  document act target is subclass of material entity
%  entity: OBI_0100026
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (DocumentActTarget(x) -> MaterialEntity(x)). 

%  disorder is subclass of material entity
%  entity: OBI_0100026
all x (Disorder(x) -> MaterialEntity(x)). 

%  Material anatomical entity is subclass of material entity
%  entity: OBI_0100026
all x (MaterialAnatomicalEntity(x) -> MaterialEntity(x)). 

%  organization is subclass of material entity
%  entity: OBI_0100026
all x (Organization(x) -> MaterialEntity(x)). 

%  material information bearer is subclass of material entity
%  entity: OBI_0100026
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (MaterialInformationBearer(x) -> MaterialEntity(x)). 

%  fiat object is subclass of material entity
%  entity: OBI_0100026
all x (FiatObject(x) -> MaterialEntity(x)). 

%  object is subclass of material entity
%  entity: OBI_0100026
all x (Object(x) -> MaterialEntity(x)). 

%  object aggregate is subclass of material entity
%  entity: OBI_0100026
all x (ObjectAggregate(x) -> MaterialEntity(x)). 

%  agent is subclass of material entity
%  entity: OBI_0100026
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (Agent(x) -> MaterialEntity(x)). 

%  organism is subclass of material entity
%  entity: OBI_0100026
all x (Organism(x) -> MaterialEntity(x)). 

%  aggregate of organizations is subclass of material entity
%  entity: OBI_0100026
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (AggregateOfOrganizations(x) -> MaterialEntity(x)). 

%  regulatory agency is subclass of OBI:ORGANISZATION
%  entity: OBI_0001942
all x (RegulatoryAgency(x) -> Obi:Organiszation(x)). 

%  hospital is subclass of OBI:ORGANISZATION
%  entity: OBI_0001942
all x (Hospital(x) -> Obi:Organiszation(x)). 

%  government is subclass of OBI:ORGANISZATION
%  entity: OBI_0001942
all x (Government(x) -> Obi:Organiszation(x)). 

%  grant agency is subclass of OBI:ORGANISZATION
%  entity: OBI_0001942
all x (GrantAgency(x) -> Obi:Organiszation(x)). 

%  department is subclass of OBI:ORGANISZATION
%  entity: OBI_0001942
all x (Department(x) -> Obi:Organiszation(x)). 

%  filled multiple choice text entity is subclass of textual entity
%  entity: OBI_0001622
all x (FilledMultipleChoiceTextEntity(x) -> TextualEntity(x)). 

%  table is subclass of textual entity
%  entity: OBI_0001622
all x (Table(x) -> TextualEntity(x)). 

%  citation is subclass of textual entity
%  entity: OBI_0001622
all x (Citation(x) -> TextualEntity(x)). 

%  citation is subclass of textual entity
%  entity: OBI_0001622
all x (Citation(x) -> TextualEntity(x)). 

%  conclusion textual entity is subclass of textual entity
%  entity: OBI_0001622
all x (ConclusionTextualEntity(x) -> TextualEntity(x)). 

%  hypothesis textual entity is subclass of textual entity
%  entity: OBI_0001622
all x (HypothesisTextualEntity(x) -> TextualEntity(x)). 

%  document title is subclass of textual entity
%  entity: OBI_0001622
all x (DocumentTitle(x) -> TextualEntity(x)). 

%  written name is subclass of textual entity
%  entity: OBI_0001622
all x (WrittenName(x) -> TextualEntity(x)). 

%  question textual entity is subclass of textual entity
%  entity: OBI_0001622
all x (QuestionTextualEntity(x) -> TextualEntity(x)). 

%  institutional identification is subclass of textual entity
%  entity: OBI_0001622
all x (InstitutionalIdentification(x) -> TextualEntity(x)). 

%  caption is subclass of textual entity
%  entity: OBI_0001622
all x (Caption(x) -> TextualEntity(x)). 

%  caption is subclass of textual entity
%  entity: OBI_0001622
all x (Caption(x) -> TextualEntity(x)). 

%  postal address is subclass of textual entity
%  entity: OBI_0001622
all x (PostalAddress(x) -> TextualEntity(x)). 

%  postal address is subclass of textual entity
%  entity: OBI_0001622
all x (PostalAddress(x) -> TextualEntity(x)). 

%  investigation title is subclass of textual entity
%  entity: OBI_0001622
all x (InvestigationTitle(x) -> TextualEntity(x)). 

%  investigation title is subclass of textual entity
%  entity: OBI_0001622
all x (InvestigationTitle(x) -> TextualEntity(x)). 

%  medical record is subclass of document
%  entity: OBI_0001000
all x (MedicalRecord(x) -> Document(x)). 

%  informed assent form is subclass of document
%  entity: OBI_0001000
all x (InformedAssentForm(x) -> Document(x)). 

%  publication is subclass of document
%  entity: OBI_0001000
all x (Publication(x) -> Document(x)). 

%  regulatory document is subclass of document
%  entity: OBI_0001000
all x (RegulatoryDocument(x) -> Document(x)). 

%  document act input document is subclass of document
%  entity: OBI_0001000
all x (DocumentActInputDocument(x) -> Document(x)). 

%  questionnaire is subclass of document
%  entity: OBI_0001000
all x (Questionnaire(x) -> Document(x)). 

%  patent is subclass of document
%  entity: OBI_0001000
all x (Patent(x) -> Document(x)). 

%  report is subclass of document
%  entity: OBI_0001000
all x (Report(x) -> Document(x)). 

%  regulatory agency is subclass of OBI:ORGANISZATION
%  entity: OBI_0000844
all x (RegulatoryAgency(x) -> Obi:Organiszation(x)). 

%  hospital is subclass of OBI:ORGANISZATION
%  entity: OBI_0000844
all x (Hospital(x) -> Obi:Organiszation(x)). 

%  government is subclass of OBI:ORGANISZATION
%  entity: OBI_0000844
all x (Government(x) -> Obi:Organiszation(x)). 

%  grant agency is subclass of OBI:ORGANISZATION
%  entity: OBI_0000844
all x (GrantAgency(x) -> Obi:Organiszation(x)). 

%  department is subclass of OBI:ORGANISZATION
%  entity: OBI_0000844
all x (Department(x) -> Obi:Organiszation(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000810
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000810
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000810
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000810
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000810
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000810
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000810
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000810
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  declining to provide consent is subclass of planned process
%  entity: OBI_0000810
all x (DecliningToProvideConsent(x) -> PlannedProcess(x)). 

%  declining to provide consent is subclass of planned process
%  entity: OBI_0000810
all x (DecliningToProvideConsent(x) -> PlannedProcess(x)). 

%  approving an informed consent form is subclass of planned process
%  entity: OBI_0000810
all x (ApprovingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  approving an informed consent form is subclass of planned process
%  entity: OBI_0000810
all x (ApprovingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  eligibility screening process is subclass of planned process
%  entity: OBI_0000810
all x (EligibilityScreeningProcess(x) -> PlannedProcess(x)). 

%  eligibility screening process is subclass of planned process
%  entity: OBI_0000810
all x (EligibilityScreeningProcess(x) -> PlannedProcess(x)). 

%  biological sample collecting is subclass of planned process
%  entity: OBI_0000810
all x (BiologicalSampleCollecting(x) -> PlannedProcess(x)). 

%  biological sample collecting is subclass of planned process
%  entity: OBI_0000810
all x (BiologicalSampleCollecting(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  validating an informed consent form is subclass of planned process
%  entity: OBI_0000810
all x (ValidatingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  validating an informed consent form is subclass of planned process
%  entity: OBI_0000810
all x (ValidatingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  act of filling out form is subclass of planned process
%  entity: OBI_0000810
all x (ActOfFillingOutForm(x) -> PlannedProcess(x)). 

%  act of filling out form is subclass of planned process
%  entity: OBI_0000810
all x (ActOfFillingOutForm(x) -> PlannedProcess(x)). 

%  act of anonymizing is subclass of planned process
%  entity: OBI_0000810
all x (ActOfAnonymizing(x) -> PlannedProcess(x)). 

%  act of anonymizing is subclass of planned process
%  entity: OBI_0000810
all x (ActOfAnonymizing(x) -> PlannedProcess(x)). 

%  withdrawing participation in study is subclass of planned process
%  entity: OBI_0000810
all x (WithdrawingParticipationInStudy(x) -> PlannedProcess(x)). 

%  withdrawing participation in study is subclass of planned process
%  entity: OBI_0000810
all x (WithdrawingParticipationInStudy(x) -> PlannedProcess(x)). 

%  social act is subclass of planned process
%  entity: OBI_0000810
all x (SocialAct(x) -> PlannedProcess(x)). 

%  social act is subclass of planned process
%  entity: OBI_0000810
all x (SocialAct(x) -> PlannedProcess(x)). 

%  investigation is subclass of planned process
%  entity: OBI_0000810
all x (Investigation(x) -> PlannedProcess(x)). 

%  investigation is subclass of planned process
%  entity: OBI_0000810
all x (Investigation(x) -> PlannedProcess(x)). 

%  secondary use is subclass of planned process
%  entity: OBI_0000810
all x (SecondaryUse(x) -> PlannedProcess(x)). 

%  secondary use is subclass of planned process
%  entity: OBI_0000810
all x (SecondaryUse(x) -> PlannedProcess(x)). 

%  canceling a permission is subclass of planned process
%  entity: OBI_0000810
all x (CancelingAPermission(x) -> PlannedProcess(x)). 

%  canceling a permission is subclass of planned process
%  entity: OBI_0000810
all x (CancelingAPermission(x) -> PlannedProcess(x)). 

%  storing a specimen is subclass of planned process
%  entity: OBI_0000810
all x (StoringASpecimen(x) -> PlannedProcess(x)). 

%  storing a specimen is subclass of planned process
%  entity: OBI_0000810
all x (StoringASpecimen(x) -> PlannedProcess(x)). 

%  informed consent process is subclass of planned process
%  entity: OBI_0000810
all x (InformedConsentProcess(x) -> PlannedProcess(x)). 

%  informed consent process is subclass of planned process
%  entity: OBI_0000810
all x (InformedConsentProcess(x) -> PlannedProcess(x)). 

%  utterance process is subclass of planned process
%  entity: OBI_0000810
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (UtteranceProcess(x) -> PlannedProcess(x)). 

%  utterance process is subclass of planned process
%  entity: OBI_0000810
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (UtteranceProcess(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000810
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000810
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000810
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000810
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000810
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000810
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000810
all x (Documenting(x) -> PlannedProcess(x)). 

%  study design execution is subclass of planned process
%  entity: OBI_0000810
all x (StudyDesignExecution(x) -> PlannedProcess(x)). 

%  study design execution is subclass of planned process
%  entity: OBI_0000810
all x (StudyDesignExecution(x) -> PlannedProcess(x)). 

%  act of using participant data is subclass of planned process
%  entity: OBI_0000810
all x (ActOfUsingParticipantData(x) -> PlannedProcess(x)). 

%  act of using participant data is subclass of planned process
%  entity: OBI_0000810
all x (ActOfUsingParticipantData(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000810
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000810
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000810
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000810
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000810
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000810
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  dubbing process is subclass of planned process
%  entity: OBI_0000810
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (DubbingProcess(x) -> PlannedProcess(x)). 

%  dubbing process is subclass of planned process
%  entity: OBI_0000810
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (DubbingProcess(x) -> PlannedProcess(x)). 

%  act of contact for future research is subclass of planned process
%  entity: OBI_0000810
all x (ActOfContactForFutureResearch(x) -> PlannedProcess(x)). 

%  act of contact for future research is subclass of planned process
%  entity: OBI_0000810
all x (ActOfContactForFutureResearch(x) -> PlannedProcess(x)). 

%  postmortem donation of biological specimen is subclass of planned process
%  entity: OBI_0000810
all x (PostmortemDonationOfBiologicalSpecimen(x) -> PlannedProcess(x)). 

%  postmortem donation of biological specimen is subclass of planned process
%  entity: OBI_0000810
all x (PostmortemDonationOfBiologicalSpecimen(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000471
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000471
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000471
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000471
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000471
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000471
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000471
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000471
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  declining to provide consent is subclass of planned process
%  entity: OBI_0000471
all x (DecliningToProvideConsent(x) -> PlannedProcess(x)). 

%  declining to provide consent is subclass of planned process
%  entity: OBI_0000471
all x (DecliningToProvideConsent(x) -> PlannedProcess(x)). 

%  approving an informed consent form is subclass of planned process
%  entity: OBI_0000471
all x (ApprovingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  approving an informed consent form is subclass of planned process
%  entity: OBI_0000471
all x (ApprovingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  eligibility screening process is subclass of planned process
%  entity: OBI_0000471
all x (EligibilityScreeningProcess(x) -> PlannedProcess(x)). 

%  eligibility screening process is subclass of planned process
%  entity: OBI_0000471
all x (EligibilityScreeningProcess(x) -> PlannedProcess(x)). 

%  biological sample collecting is subclass of planned process
%  entity: OBI_0000471
all x (BiologicalSampleCollecting(x) -> PlannedProcess(x)). 

%  biological sample collecting is subclass of planned process
%  entity: OBI_0000471
all x (BiologicalSampleCollecting(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  validating an informed consent form is subclass of planned process
%  entity: OBI_0000471
all x (ValidatingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  validating an informed consent form is subclass of planned process
%  entity: OBI_0000471
all x (ValidatingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  act of filling out form is subclass of planned process
%  entity: OBI_0000471
all x (ActOfFillingOutForm(x) -> PlannedProcess(x)). 

%  act of filling out form is subclass of planned process
%  entity: OBI_0000471
all x (ActOfFillingOutForm(x) -> PlannedProcess(x)). 

%  act of anonymizing is subclass of planned process
%  entity: OBI_0000471
all x (ActOfAnonymizing(x) -> PlannedProcess(x)). 

%  act of anonymizing is subclass of planned process
%  entity: OBI_0000471
all x (ActOfAnonymizing(x) -> PlannedProcess(x)). 

%  withdrawing participation in study is subclass of planned process
%  entity: OBI_0000471
all x (WithdrawingParticipationInStudy(x) -> PlannedProcess(x)). 

%  withdrawing participation in study is subclass of planned process
%  entity: OBI_0000471
all x (WithdrawingParticipationInStudy(x) -> PlannedProcess(x)). 

%  social act is subclass of planned process
%  entity: OBI_0000471
all x (SocialAct(x) -> PlannedProcess(x)). 

%  social act is subclass of planned process
%  entity: OBI_0000471
all x (SocialAct(x) -> PlannedProcess(x)). 

%  investigation is subclass of planned process
%  entity: OBI_0000471
all x (Investigation(x) -> PlannedProcess(x)). 

%  investigation is subclass of planned process
%  entity: OBI_0000471
all x (Investigation(x) -> PlannedProcess(x)). 

%  secondary use is subclass of planned process
%  entity: OBI_0000471
all x (SecondaryUse(x) -> PlannedProcess(x)). 

%  secondary use is subclass of planned process
%  entity: OBI_0000471
all x (SecondaryUse(x) -> PlannedProcess(x)). 

%  canceling a permission is subclass of planned process
%  entity: OBI_0000471
all x (CancelingAPermission(x) -> PlannedProcess(x)). 

%  canceling a permission is subclass of planned process
%  entity: OBI_0000471
all x (CancelingAPermission(x) -> PlannedProcess(x)). 

%  storing a specimen is subclass of planned process
%  entity: OBI_0000471
all x (StoringASpecimen(x) -> PlannedProcess(x)). 

%  storing a specimen is subclass of planned process
%  entity: OBI_0000471
all x (StoringASpecimen(x) -> PlannedProcess(x)). 

%  informed consent process is subclass of planned process
%  entity: OBI_0000471
all x (InformedConsentProcess(x) -> PlannedProcess(x)). 

%  informed consent process is subclass of planned process
%  entity: OBI_0000471
all x (InformedConsentProcess(x) -> PlannedProcess(x)). 

%  utterance process is subclass of planned process
%  entity: OBI_0000471
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (UtteranceProcess(x) -> PlannedProcess(x)). 

%  utterance process is subclass of planned process
%  entity: OBI_0000471
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (UtteranceProcess(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000471
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000471
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000471
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000471
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000471
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000471
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000471
all x (Documenting(x) -> PlannedProcess(x)). 

%  study design execution is subclass of planned process
%  entity: OBI_0000471
all x (StudyDesignExecution(x) -> PlannedProcess(x)). 

%  study design execution is subclass of planned process
%  entity: OBI_0000471
all x (StudyDesignExecution(x) -> PlannedProcess(x)). 

%  act of using participant data is subclass of planned process
%  entity: OBI_0000471
all x (ActOfUsingParticipantData(x) -> PlannedProcess(x)). 

%  act of using participant data is subclass of planned process
%  entity: OBI_0000471
all x (ActOfUsingParticipantData(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000471
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000471
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000471
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000471
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000471
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000471
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  dubbing process is subclass of planned process
%  entity: OBI_0000471
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (DubbingProcess(x) -> PlannedProcess(x)). 

%  dubbing process is subclass of planned process
%  entity: OBI_0000471
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (DubbingProcess(x) -> PlannedProcess(x)). 

%  act of contact for future research is subclass of planned process
%  entity: OBI_0000471
all x (ActOfContactForFutureResearch(x) -> PlannedProcess(x)). 

%  act of contact for future research is subclass of planned process
%  entity: OBI_0000471
all x (ActOfContactForFutureResearch(x) -> PlannedProcess(x)). 

%  postmortem donation of biological specimen is subclass of planned process
%  entity: OBI_0000471
all x (PostmortemDonationOfBiologicalSpecimen(x) -> PlannedProcess(x)). 

%  postmortem donation of biological specimen is subclass of planned process
%  entity: OBI_0000471
all x (PostmortemDonationOfBiologicalSpecimen(x) -> PlannedProcess(x)). 

%  regulatory agency is subclass of OBI:ORGANISZATION
%  entity: OBI_0000450
all x (RegulatoryAgency(x) -> Obi:Organiszation(x)). 

%  hospital is subclass of OBI:ORGANISZATION
%  entity: OBI_0000450
all x (Hospital(x) -> Obi:Organiszation(x)). 

%  government is subclass of OBI:ORGANISZATION
%  entity: OBI_0000450
all x (Government(x) -> Obi:Organiszation(x)). 

%  grant agency is subclass of OBI:ORGANISZATION
%  entity: OBI_0000450
all x (GrantAgency(x) -> Obi:Organiszation(x)). 

%  department is subclass of OBI:ORGANISZATION
%  entity: OBI_0000450
all x (Department(x) -> Obi:Organiszation(x)). 

%  protocol is subclass of DOCUMENT
%  entity: OBI_0000272
all x (Protocol(x) -> Document(x)). 

%  waiver document is subclass of DOCUMENT
%  entity: OBI_0000272
all x (WaiverDocument(x) -> Document(x)). 

%  institutional review board approval is subclass of DOCUMENT
%  entity: OBI_0000272
all x (InstitutionalReviewBoardApproval(x) -> Document(x)). 

%  population is subclass of material entity
%  entity: OBI_0000245
all x (Population(x) -> MaterialEntity(x)). 

%  collection of organisms is subclass of material entity
%  entity: OBI_0000245
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (CollectionOfOrganisms(x) -> MaterialEntity(x)). 

%  specimen is subclass of material entity
%  entity: OBI_0000245
all x (Specimen(x) -> MaterialEntity(x)). 

%  document act target is subclass of material entity
%  entity: OBI_0000245
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (DocumentActTarget(x) -> MaterialEntity(x)). 

%  disorder is subclass of material entity
%  entity: OBI_0000245
all x (Disorder(x) -> MaterialEntity(x)). 

%  Material anatomical entity is subclass of material entity
%  entity: OBI_0000245
all x (MaterialAnatomicalEntity(x) -> MaterialEntity(x)). 

%  organization is subclass of material entity
%  entity: OBI_0000245
all x (Organization(x) -> MaterialEntity(x)). 

%  material information bearer is subclass of material entity
%  entity: OBI_0000245
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (MaterialInformationBearer(x) -> MaterialEntity(x)). 

%  fiat object is subclass of material entity
%  entity: OBI_0000245
all x (FiatObject(x) -> MaterialEntity(x)). 

%  object is subclass of material entity
%  entity: OBI_0000245
all x (Object(x) -> MaterialEntity(x)). 

%  object aggregate is subclass of material entity
%  entity: OBI_0000245
all x (ObjectAggregate(x) -> MaterialEntity(x)). 

%  agent is subclass of material entity
%  entity: OBI_0000245
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (Agent(x) -> MaterialEntity(x)). 

%  organism is subclass of material entity
%  entity: OBI_0000245
all x (Organism(x) -> MaterialEntity(x)). 

%  aggregate of organizations is subclass of material entity
%  entity: OBI_0000245
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (AggregateOfOrganizations(x) -> MaterialEntity(x)). 

%  legal person role is subclass of BFO:ROLES
%  entity: OBI_0000202
all x (LegalPersonRole(x) -> Bfo:Roles(x)). 

%  witness role is subclass of BFO:ROLES
%  entity: OBI_0000202
all x (WitnessRole(x) -> Bfo:Roles(x)). 

%  minor role is subclass of BFO:ROLES
%  entity: OBI_0000202
all x (MinorRole(x) -> Bfo:Roles(x)). 

%  representative role is subclass of BFO:ROLES
%  entity: OBI_0000202
all x (RepresentativeRole(x) -> Bfo:Roles(x)). 

%  vulnerable individual role is subclass of BFO:ROLES
%  entity: OBI_0000202
all x (VulnerableIndividualRole(x) -> Bfo:Roles(x)). 

%  regulatory oversight role is subclass of BFO:ROLES
%  entity: OBI_0000202
all x (RegulatoryOversightRole(x) -> Bfo:Roles(x)). 

%  prisoner role is subclass of BFO:ROLES
%  entity: OBI_0000202
all x (PrisonerRole(x) -> Bfo:Roles(x)). 

%  committee member role is subclass of BFO:ROLES
%  entity: OBI_0000202
all x (CommitteeMemberRole(x) -> Bfo:Roles(x)). 

%  hospital governing body role is subclass of BFO:ROLES
%  entity: OBI_0000202
all x (HospitalGoverningBodyRole(x) -> Bfo:Roles(x)). 

%  investigation agent role is subclass of BFO:ROLES
%  entity: OBI_0000202
all x (InvestigationAgentRole(x) -> Bfo:Roles(x)). 

%  author role is subclass of role
%  entity: OBI_0000112
all x (AuthorRole(x) -> Role(x)). 

%  credential role is subclass of role
%  entity: OBI_0000112
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (CredentialRole(x) -> Role(x)). 

%  obligee role is subclass of role
%  entity: OBI_0000112
all x (ObligeeRole(x) -> Role(x)). 

%  deontic role is subclass of role
%  entity: OBI_0000112
all x (DeonticRole(x) -> Role(x)). 

%  candidate ineligible for study role is subclass of role
%  entity: OBI_0000112
all x (CandidateIneligibleForStudyRole(x) -> Role(x)). 

%  deontic declaration performer role is subclass of role
%  entity: OBI_0000112
all x (DeonticDeclarationPerformerRole(x) -> Role(x)). 

%  research subject role is subclass of role
%  entity: OBI_0000112
all x (ResearchSubjectRole(x) -> Role(x)). 

%  obligor role is subclass of role
%  entity: OBI_0000112
all x (ObligorRole(x) -> Role(x)). 

%  investigator role is subclass of role
%  entity: OBI_0000112
all x (InvestigatorRole(x) -> Role(x)). 

%  legal representative role is subclass of role
%  entity: OBI_0000112
all x (LegalRepresentativeRole(x) -> Role(x)). 

%  specimen role is subclass of role
%  entity: OBI_0000112
all x (SpecimenRole(x) -> Role(x)). 

%  candidate eligible for study role is subclass of role
%  entity: OBI_0000112
all x (CandidateEligibleForStudyRole(x) -> Role(x)). 

%  document act performer role is subclass of role
%  entity: OBI_0000112
all x (DocumentActPerformerRole(x) -> Role(x)). 

%  document act performer role is subclass of role
%  entity: OBI_0000112
all x (DocumentActPerformerRole(x) -> Role(x)). 

%  patient role is subclass of role
%  entity: OBI_0000112
all x (PatientRole(x) -> Role(x)). 

%  assenter role is subclass of role
%  entity: OBI_0000112
all x (AssenterRole(x) -> Role(x)). 

%  document act template creator role is subclass of role
%  entity: OBI_0000112
all x (DocumentActTemplateCreatorRole(x) -> Role(x)). 

%  document act template creator role is subclass of role
%  entity: OBI_0000112
all x (DocumentActTemplateCreatorRole(x) -> Role(x)). 

%  contact role is subclass of role
%  entity: OBI_0000112
all x (ContactRole(x) -> Role(x)). 

%  author role is subclass of role
%  entity: OBI_0000093
all x (AuthorRole(x) -> Role(x)). 

%  credential role is subclass of role
%  entity: OBI_0000093
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (CredentialRole(x) -> Role(x)). 

%  obligee role is subclass of role
%  entity: OBI_0000093
all x (ObligeeRole(x) -> Role(x)). 

%  deontic role is subclass of role
%  entity: OBI_0000093
all x (DeonticRole(x) -> Role(x)). 

%  candidate ineligible for study role is subclass of role
%  entity: OBI_0000093
all x (CandidateIneligibleForStudyRole(x) -> Role(x)). 

%  deontic declaration performer role is subclass of role
%  entity: OBI_0000093
all x (DeonticDeclarationPerformerRole(x) -> Role(x)). 

%  research subject role is subclass of role
%  entity: OBI_0000093
all x (ResearchSubjectRole(x) -> Role(x)). 

%  obligor role is subclass of role
%  entity: OBI_0000093
all x (ObligorRole(x) -> Role(x)). 

%  investigator role is subclass of role
%  entity: OBI_0000093
all x (InvestigatorRole(x) -> Role(x)). 

%  legal representative role is subclass of role
%  entity: OBI_0000093
all x (LegalRepresentativeRole(x) -> Role(x)). 

%  specimen role is subclass of role
%  entity: OBI_0000093
all x (SpecimenRole(x) -> Role(x)). 

%  candidate eligible for study role is subclass of role
%  entity: OBI_0000093
all x (CandidateEligibleForStudyRole(x) -> Role(x)). 

%  document act performer role is subclass of role
%  entity: OBI_0000093
all x (DocumentActPerformerRole(x) -> Role(x)). 

%  document act performer role is subclass of role
%  entity: OBI_0000093
all x (DocumentActPerformerRole(x) -> Role(x)). 

%  patient role is subclass of role
%  entity: OBI_0000093
all x (PatientRole(x) -> Role(x)). 

%  assenter role is subclass of role
%  entity: OBI_0000093
all x (AssenterRole(x) -> Role(x)). 

%  document act template creator role is subclass of role
%  entity: OBI_0000093
all x (DocumentActTemplateCreatorRole(x) -> Role(x)). 

%  document act template creator role is subclass of role
%  entity: OBI_0000093
all x (DocumentActTemplateCreatorRole(x) -> Role(x)). 

%  contact role is subclass of role
%  entity: OBI_0000093
all x (ContactRole(x) -> Role(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000066
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000066
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000066
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000066
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000066
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000066
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000066
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  associating information with a centrally registered identifier in its registry is subclass of planned process
%  entity: OBI_0000066
all x (AssociatingInformationWithACentrallyRegisteredIdentifierInItsRegistry(x) -> PlannedProcess(x)). 

%  declining to provide consent is subclass of planned process
%  entity: OBI_0000066
all x (DecliningToProvideConsent(x) -> PlannedProcess(x)). 

%  declining to provide consent is subclass of planned process
%  entity: OBI_0000066
all x (DecliningToProvideConsent(x) -> PlannedProcess(x)). 

%  approving an informed consent form is subclass of planned process
%  entity: OBI_0000066
all x (ApprovingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  approving an informed consent form is subclass of planned process
%  entity: OBI_0000066
all x (ApprovingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  eligibility screening process is subclass of planned process
%  entity: OBI_0000066
all x (EligibilityScreeningProcess(x) -> PlannedProcess(x)). 

%  eligibility screening process is subclass of planned process
%  entity: OBI_0000066
all x (EligibilityScreeningProcess(x) -> PlannedProcess(x)). 

%  biological sample collecting is subclass of planned process
%  entity: OBI_0000066
all x (BiologicalSampleCollecting(x) -> PlannedProcess(x)). 

%  biological sample collecting is subclass of planned process
%  entity: OBI_0000066
all x (BiologicalSampleCollecting(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  assigning a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (AssigningACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  validating an informed consent form is subclass of planned process
%  entity: OBI_0000066
all x (ValidatingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  validating an informed consent form is subclass of planned process
%  entity: OBI_0000066
all x (ValidatingAnInformedConsentForm(x) -> PlannedProcess(x)). 

%  act of filling out form is subclass of planned process
%  entity: OBI_0000066
all x (ActOfFillingOutForm(x) -> PlannedProcess(x)). 

%  act of filling out form is subclass of planned process
%  entity: OBI_0000066
all x (ActOfFillingOutForm(x) -> PlannedProcess(x)). 

%  act of anonymizing is subclass of planned process
%  entity: OBI_0000066
all x (ActOfAnonymizing(x) -> PlannedProcess(x)). 

%  act of anonymizing is subclass of planned process
%  entity: OBI_0000066
all x (ActOfAnonymizing(x) -> PlannedProcess(x)). 

%  withdrawing participation in study is subclass of planned process
%  entity: OBI_0000066
all x (WithdrawingParticipationInStudy(x) -> PlannedProcess(x)). 

%  withdrawing participation in study is subclass of planned process
%  entity: OBI_0000066
all x (WithdrawingParticipationInStudy(x) -> PlannedProcess(x)). 

%  social act is subclass of planned process
%  entity: OBI_0000066
all x (SocialAct(x) -> PlannedProcess(x)). 

%  social act is subclass of planned process
%  entity: OBI_0000066
all x (SocialAct(x) -> PlannedProcess(x)). 

%  investigation is subclass of planned process
%  entity: OBI_0000066
all x (Investigation(x) -> PlannedProcess(x)). 

%  investigation is subclass of planned process
%  entity: OBI_0000066
all x (Investigation(x) -> PlannedProcess(x)). 

%  secondary use is subclass of planned process
%  entity: OBI_0000066
all x (SecondaryUse(x) -> PlannedProcess(x)). 

%  secondary use is subclass of planned process
%  entity: OBI_0000066
all x (SecondaryUse(x) -> PlannedProcess(x)). 

%  canceling a permission is subclass of planned process
%  entity: OBI_0000066
all x (CancelingAPermission(x) -> PlannedProcess(x)). 

%  canceling a permission is subclass of planned process
%  entity: OBI_0000066
all x (CancelingAPermission(x) -> PlannedProcess(x)). 

%  storing a specimen is subclass of planned process
%  entity: OBI_0000066
all x (StoringASpecimen(x) -> PlannedProcess(x)). 

%  storing a specimen is subclass of planned process
%  entity: OBI_0000066
all x (StoringASpecimen(x) -> PlannedProcess(x)). 

%  informed consent process is subclass of planned process
%  entity: OBI_0000066
all x (InformedConsentProcess(x) -> PlannedProcess(x)). 

%  informed consent process is subclass of planned process
%  entity: OBI_0000066
all x (InformedConsentProcess(x) -> PlannedProcess(x)). 

%  utterance process is subclass of planned process
%  entity: OBI_0000066
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (UtteranceProcess(x) -> PlannedProcess(x)). 

%  utterance process is subclass of planned process
%  entity: OBI_0000066
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (UtteranceProcess(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  looking up a centrally registered identifier is subclass of planned process
%  entity: OBI_0000066
all x (LookingUpACentrallyRegisteredIdentifier(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000066
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000066
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000066
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000066
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000066
all x (Documenting(x) -> PlannedProcess(x)). 

%  documenting is subclass of planned process
%  entity: OBI_0000066
all x (Documenting(x) -> PlannedProcess(x)). 

%  study design execution is subclass of planned process
%  entity: OBI_0000066
all x (StudyDesignExecution(x) -> PlannedProcess(x)). 

%  study design execution is subclass of planned process
%  entity: OBI_0000066
all x (StudyDesignExecution(x) -> PlannedProcess(x)). 

%  act of using participant data is subclass of planned process
%  entity: OBI_0000066
all x (ActOfUsingParticipantData(x) -> PlannedProcess(x)). 

%  act of using participant data is subclass of planned process
%  entity: OBI_0000066
all x (ActOfUsingParticipantData(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000066
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000066
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000066
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000066
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000066
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  data item extraction from journal article is subclass of planned process
%  entity: OBI_0000066
all x (DataItemExtractionFromJournalArticle(x) -> PlannedProcess(x)). 

%  dubbing process is subclass of planned process
%  entity: OBI_0000066
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (DubbingProcess(x) -> PlannedProcess(x)). 

%  dubbing process is subclass of planned process
%  entity: OBI_0000066
% Has EquivalenceAxiom! 
% Check FOL_output/AXIOMS_output.txt for EquivalenceAxiom
all x (DubbingProcess(x) -> PlannedProcess(x)). 

%  act of contact for future research is subclass of planned process
%  entity: OBI_0000066
all x (ActOfContactForFutureResearch(x) -> PlannedProcess(x)). 

%  act of contact for future research is subclass of planned process
%  entity: OBI_0000066
all x (ActOfContactForFutureResearch(x) -> PlannedProcess(x)). 

%  postmortem donation of biological specimen is subclass of planned process
%  entity: OBI_0000066
all x (PostmortemDonationOfBiologicalSpecimen(x) -> PlannedProcess(x)). 

%  postmortem donation of biological specimen is subclass of planned process
%  entity: OBI_0000066
all x (PostmortemDonationOfBiologicalSpecimen(x) -> PlannedProcess(x)). 

%  treatment is subclass of process
%  entity: OBI_0000011
all x (Treatment(x) -> Process(x)). 

%  planned process is subclass of process
%  entity: OBI_0000011
all x (PlannedProcess(x) -> Process(x)). 

%  planned process is subclass of process
%  entity: OBI_0000011
all x (PlannedProcess(x) -> Process(x)). 

%  process profile is subclass of process
%  entity: OBI_0000011
all x (ProcessProfile(x) -> Process(x)). 

%  authentication is subclass of process
%  entity: OBI_0000011
all x (Authentication(x) -> Process(x)). 

%  authentication is subclass of process
%  entity: OBI_0000011
all x (Authentication(x) -> Process(x)). 

%  oscillating is subclass of process
%  entity: OBI_0000011
all x (Oscillating(x) -> Process(x)). 

%  history is subclass of process
%  entity: OBI_0000011
all x (History(x) -> Process(x)). 

%  stasis is subclass of process
%  entity: OBI_0000011
all x (Stasis(x) -> Process(x)). 

%  study termination is subclass of process
%  entity: OBI_0000011
all x (StudyTermination(x) -> Process(x)). 

